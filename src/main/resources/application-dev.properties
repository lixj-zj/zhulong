## 本地开发环境

# Server 配置
server.port=8080
#server.servlet.context-path=/zhulong

# 项目介绍配置
com.demo.project.name=ZhuLong
com.demo.author.name=lxj


# 支持热部署
spring.devtools.restart.enabled=true

# thymeleaf 模板引擎，本地开发环境若打开则调试成本高（影响调试过程中的热部署，每次修改需重启服务器），其他环境都需要打开。
spring.thymeleaf.cache=false
# thymeleaf 严格校验 html 标签，所有的标签必须有开有闭，比如<br></br>或者<br/>是可以的，但是<br>会报错，配置此项目的是解决这个问题，使页面松校验。
spring.thymeleaf.mode=LEGACYHTML5


# 日志
logging.config=classpath:logback-spring.xml
logging.file=dev
logging.level.com.favorites=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.file.max-history=180
logging.file.max-size=10M


# MySQL 数据库配置
spring.datasource.primary.url=jdbc:mysql://localhost:3306/zhulong?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false
spring.datasource.primary.username=root
spring.datasource.primary.password=123456789
#spring.datasource.primary.password=arcn67gU6fhB9VyklZkN+FhRKVF16vT5l+DV58/14o0gu9bGQhUVIJRucllyVPGkHK0rmzaGpWXDZ7qLebUEVg==
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.primary.public.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALsGkaUz2Obux7bdS6XQG6vbodjn5bIaPQzDVODcmdz+237VVwyylqC6KmlwQZFaowK9pXBGggc5lCQjhd+PuiMCAwEAAQ==
spring.datasource.primary.initialSize=1
spring.datasource.primary.minIdle=1
spring.datasource.primary.maxActive=100


# 数据库 jpa
# 自动创建、更新、验证数据库表结构
spring.jpa.properties.hibernate.hbm2ddl.auto=update
# dialect 主要是指定生成表名的存储引擎为 InnoDBD
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# show-sql 是否打印出自动生成的 SQL，方便调试的时候查看
spring.jpa.show-sql= true


# 指定静态资源地址
spring.mvc.static-path-pattern=/**



mybatis.mapperLocations=classpath:com.demo.zhulong.base.mapping/*.xml


# druid 基本配置
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=30
spring.datasource.druid.WebStatFilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=200



## redis 相关配置
# Redis数据库索引（默认为0）
spring.redis.database=3
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0




### mongoDB 配置
#spring.data.mongodb.uri=mongodb://root:123456789@localhost:27017/demo
## 多个 IP 集群可以采用以下配置：
##spring.data.mongodb.uri=mongodb://user:pwd@ip1:port1,ip2:port2/database


# 邮件
# 邮箱服务器地址
spring.mail.host=smtp.163.com
spring.mail.username=only_used_test@163.com
# 163 邮箱开启客户端授权密码，授权码是用于登录第三方邮件客户端的专用密码，此处代替邮箱登录密码。
spring.mail.password=YzM4ffPmBasMuGG1
spring.mail.default-encoding=UTF-8
mail.fromMail.addr=only_used_test@163.com


# 消息队列 RabbitMQ
spring.rabbitmq.host=192.168.131.20
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin



# 上传文件
#默认支持文件上传
spring.servlet.multipart.enabled=true
#支持文件写入磁盘.
spring.servlet.multipart.file-size-threshold=0
# 上传文件的临时目录
spring.servlet.multipart.location=
# 上传文件总的最大值
spring.servlet.multipart.max-request-size=10MB
# 单个文件的最大值
spring.servlet.multipart.max-file-size=10MB



# HDFS 相关配置






